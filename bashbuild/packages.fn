###############################################################################
#          Unified Build Script lib  -  A Part of LisaEm
#                    http://lisaem.sunder.net
#                   The Lisa Emulator Project
#   Copyright (C) 2021 Ray A. Arachelian, All Rights Reserved
# Released under the terms of the GNU General Public License 2.0
#----------------------------------------------------------------
#
# Package Building Functions (common)
#
###############################################################################

# do we have the abililty to build packages for this architecture?
function is_pkg_available() {
 #[[ -z "${DARWIN}${CYGWIN}${LINUX}${OPENBSD}${FREEBSD}${SUNOS}" ]] && return 1 # broken for now
 [[ -z "${DARWIN}${CYGWIN}${LINUX}${FREEBSD}${SUNOS}" ]] && return 1
 return 0
}

# to build a package, should we do a fake install in pkg/build/tmp?
function do_fake_install_for_pkg() {
 [[ -n "${LINUX}${OPENBSD}${FREEBSD}${SUNOS}" ]] && export INSTALL=1 && return 1
 return 0
}

function AskCygWinSudo() {
  if  [[ -n "$CYGWIN" ]] && [[ -z "$HASPERMISSION" ]]; then
       export INSTALL=1
       echo "NOTE: On Windows package will also install, but to the staging directory" 1>&2
       echo "Command: $0 $@"                             1>&2
       CygwinSudoRebuild build install package \
       $( for i in $@; do
          if [[ "$i" != "package" ]] && [[ "$i" != "install" ]] && [[ "$i" != "build" ]] && [[ "$i" != "pkg" ]]; then
             echo "$i"
          fi
          done )
       exit $?
  fi
}

function install_check_sudo_pass() {
  if  [[ -z "$CYGWIN" ]]; then
      [[ "`whoami`" != "root" ]] && echo "Need to be root to install. try: sudo ./build.sh $@" && exit 1
  else
      [[ -z "$HASPERMISSION" ]] && CygwinSudoRebuild $@
  fi
  export INSTALL=2
}

function create_packages_for_os() {
  if [[ -n "$WITHPKG" ]]; then
     echo "* Creating Packages" 1>&2

      if [[ "$LINUX" ]]; then
         LinuxDebianPackage
         LinuxRPMPackage
         LinuxSnapPackage
      fi

      [[ -n "$FREEBSD" ]] && FreeBSDPackage
      [[ -n "$OPENBSD" ]] && OpenBSDPackage

      if [[ -n "$SUNOS"   ]]; then
         SunOSPackage
         SunOSIPSPackage
      fi

      if  [[ -n "$CYGWIN" ]]; then
          [[ -z "$MACHINE" ]] && export MACHINE="$( uname -m )" 
          PKGNAME="${XTLD}/pkg/LisaEm-${VER}-${STABILITY}-${RELEASEDATE}-win-${MACHINE}.zip"
          echo "Creating ZIP and/or NSIS (if available) Windows Package: $PKGNAME" 1>&2
          cd "$PREFIX/../.." || exit 1
          WinZIPPackage "$PKGNAME" "./${COMPANY}/${SOFTWARE}"
          WinNSISPackage
      fi
      elapsed=$(get_elapsed_time) && [[ -n "$elapsed" ]] && echo "$elapsed seconds" || echo

  #rm -rf "${TLDR}/pkg/build/tmp/${COMPANY}"
  fi
}
